# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

{% import 'macros.jinja' as macros with context %}

{{ macros.github_header() }}

jobs:

  build-cpp-ubuntu:
    {% set arch = '${{ matrix.platform.arch }}' %}
    name: Build C++ libraries Ubuntu {{ arch }}
    runs-on: {{ '${{ matrix.platform.runs_on }}' }}
    env:
      # architecture name used for archery build
      ARCH: {{ '${{ matrix.platform.archery_arch }}' }}
      ARCH_ALIAS: {{ '${{ matrix.platform.archery_arch_alias }}' }}
      ARCH_SHORT: {{ '${{ matrix.platform.archery_arch_short }}' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runs_on: ["ubuntu-latest"]
            arch: "x86_64"
            archery_arch: "amd64"
            archery_arch_alias: "x86_64"
            archery_arch_short: "amd64"
          - runs_on: ["buildjet-8vcpu-ubuntu-2204-arm"]
            arch: "aarch_64"
            archery_arch: "arm64v8"
            archery_arch_alias: "aarch64"
            archery_arch_short: "arm64"
    steps:
      {{ macros.github_checkout_arrow()|indent }}
      {{ macros.github_free_space()|indent }}
      {{ macros.github_install_archery()|indent }}
      - name: Free up disk space
        run: |
            df -h
            sudo rm -rf /opt/hostedtoolcache/CodeQL || :
            df -h
      - name: Set Swap Space
        continue-on-error: true
        shell: bash
        run: |
            sudo fallocate -l 16G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
      - name: Build C++ libraries
        env:
        {{ macros.github_set_sccache_envvars()|indent(8) }}
        run: |
          archery docker run \
            -e ARROW_JAVA_BUILD=OFF \
            -e ARROW_JAVA_TEST=OFF \
            java-jni-manylinux-2014
      - name: Compress into single artifact to keep directory structure
        run: tar -cvzf arrow-shared-libs-linux-{{ arch }}.tar.gz arrow/java-dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-shared-lib-{{ arch }}
          path: arrow-shared-libs-linux-{{ arch }}.tar.gz
    {% if arrow.is_default_branch() %}
      {{ macros.github_login_dockerhub()|indent }}
      - name: Push Docker image
        shell: bash
        run: archery docker push java-jni-manylinux-2014
    {% endif %}

  package-jars:
    name: Build jar files
    runs-on: macos-12
    needs:
      - build-cpp-ubuntu
    steps:
      {{ macros.github_checkout_arrow(fetch_depth=0)|indent }}
      - name: Download Libraries
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Decompress artifacts
        run: |
          mv artifacts/*/*.tar.gz .
          tar -xvzf arrow-shared-libs-linux-x86_64.tar.gz
          tar -xvzf arrow-shared-libs-linux-aarch_64.tar.gz
      - name: Test that shared libraries exist
        run: |
          set -x

          test -f arrow/java-dist/x86_64/libarrow_cdata_jni.so
          test -f arrow/java-dist/x86_64/libarrow_dataset_jni.so
          test -f arrow/java-dist/x86_64/libarrow_orc_jni.so
          test -f arrow/java-dist/x86_64/libgandiva_jni.so

          test -f arrow/java-dist/aarch_64/libarrow_cdata_jni.so
          test -f arrow/java-dist/aarch_64/libarrow_dataset_jni.so
          test -f arrow/java-dist/aarch_64/libarrow_orc_jni.so
          test -f arrow/java-dist/aarch_64/libgandiva_jni.so

      - name: Build bundled jar
        run: |
          set -e
          pushd arrow/java
          mvn versions:set -DnewVersion={{ arrow.no_rc_snapshot_version }}
          mvn versions:set -DnewVersion={{ arrow.no_rc_snapshot_version }} -f bom
          mvn versions:set -DnewVersion={{ arrow.no_rc_snapshot_version }} -f maven
          popd
          arrow/ci/scripts/java_full_build.sh \
            $GITHUB_WORKSPACE/arrow \
            $GITHUB_WORKSPACE/arrow/java-dist
      {{ macros.github_upload_releases(["arrow/java-dist/*.jar",
                                        "arrow/java-dist/*.json",
                                        "arrow/java-dist/*.pom",
                                        "arrow/java-dist/*.xml",
                                        "arrow/java-dist/*.zip"])|indent }}
